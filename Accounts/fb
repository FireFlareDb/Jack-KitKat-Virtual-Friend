from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
import os
import wget
import time

options = webdriver.ChromeOptions()
prefs = {"profile.default_content_setting_values.notifications": 2}
options.add_experimental_option("prefs", prefs)
options.binary_location = r"C:/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe"
chrome_driver_binary = r"D:/Program Files/chromedriver_win32/chromedriver.exe"
driver = webdriver.Chrome(chrome_driver_binary, options=options)
driver.get('https://www.facebook.com/')


username = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[name="email"]')))
password = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[name="pass"]')))
username.clear()
password.clear()

username.send_keys('mail@gmail.com')
password.send_keys('gmailpassword')

log_in = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "button[type='submit']"))).click()
time.sleep(5)

images = []
for i in ['photos_of']:
    driver.get('https://www.facebook.com/profile.php?id=104360276&sk=' + i)
    time.sleep(3)
    n_scrolls = 2
    for j in range(1, n_scrolls):
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(5)

        anchors = driver.find_elements_by_tag_name('a')
        anchors = [a.get_attribute('href') for a in anchors]
        anchors = [a for a in anchors if str(a).startswith('https://www.facebook.com/photo')]

        for a in anchors:
            driver.get(a)
            time.sleep(5)
            img = driver.find_elements_by_tag_name("img")
            imgSrc = img[1].get_attribute("src")
            images.append(imgSrc)

        print(images)






        -----------------------------------------------------------------------








from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
import os
import wget

options = webdriver.ChromeOptions()
options.binary_location = r"C:/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe"
chrome_driver_binary = r"D:/Program Files/chromedriver_win32/chromedriver.exe"
driver = webdriver.Chrome(chrome_driver_binary, options=options)
driver.get('https://www.instagram.com/')


username = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[name="username"]')))
password = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'input[name="password"]')))
username.clear()
password.clear()

username.send_keys('abhi_trikya_prmf')
password.send_keys('hellopassword')

log_in = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "button[type='submit']"))).click()

not_now = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Not Now')]"))).click()
not_now2 = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Not Now')]"))).click()

# searchbox = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//input[@placeholder='Search']")))
# searchbox.clear()
# searchbox.send_keys('kayceericeofficial')
# searchbox.send_keys(Keys.ENTER)
# searchbox.send_keys(Keys.ENTER)

driver.get('https://www.instagram.com/abhi_trikya_prmf/')
driver.execute_script("window.scrollTo(0, 500);")
images = driver.find_elements_by_tag_name('img')
images = [image.get_attribute('src') for image in images]

# Save Images To Computer
if not os.path.exists('/cats'):
    path = os.getcwd()
    path = os.path.join(path, 'cats')
    os.mkdir(path)
else:
    path = '/cats'

counter = 0
for image in images:
    save_as = os.path.join(path, 'liveoverflow' + str(counter) + '.jpg')
    wget.download(image, save_as)
    counter += 1